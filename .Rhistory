m
levels(m$am) <- c("Automatic","Manual")
m$am <- as.factor(m$am)
levels(m$am) <- c("Automatic", "Manual")
m
t.test(m[m$am=="Automatic",1], m[m$am=="Manual",])
m[m$am=="Automatic",1]
m[m$am=="Manual",1]
t.test(m[m$am=="Automatic",1], m[m$am=="Manual",])
bestfit <- lm(mpg~am+wt+hp+cyl, data=m)
e <- resid(bestfit)
plot(e)
allfit <- lm(mpg~., data=m)
ea<-resid(allfit)
plot(ea)
fit1 <- lm(mpg~factor(am), data=m)
r1 <- resid(fit1)
plot(r1, m$am)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
plot(r1, m$am, horizontal=TRUE)
plot(m$am, r1)
plot(m$am, r1, type="b")
amdf <- data.frame(x=m$am, y=r1)
g <- ggplot(data=amdf, aes(x=x, y=y))
g <- g + geom_dotplot()
g
g <- ggplot(data=m, aes(x=am, y=mpg))
g <- g + geom_dotplot()
g
sum(e)
round(sum(e))
plot(e)
abline(h=0, col="red")
abline(h=4, col="blue")
bestfit <- lm(mpg~., data=m)
round(summary(bestfit)$coef, 3)
bc <- round(summary(bestfit)$coef, 3)
bcdf <- data.frame(bc)
names(bcdf)
view(bcdf)
View(bcdf)
bcdf[4==0.916]
bcdf[4==0.916,]
bcdf[4==0.916,4]
bcdf[4<1,4]
bcdf[bcdf$"Pr...t.."<1,4]
fit1 <- lm(mpg~. , data=m)
summary(fit1)$coef
round(summary(fit1)$coef,3)
fit2<-update(fit1,.~.-cyl)
round(summary(fit2)$coef,3)
fit3<-update(fit2,.~.-vs)
round(summary(fit3)$coef,3)
fit4<-update(fit3,.~.-carb)
round(summary(fit4)$coef,3)
fit5<-update(fit4,.~.-gear)
round(summary(fit5)$coef,3)
fit6<-update(fit5,.~.-drat)
round(summary(fit6)$coef,3)
fit7<-update(fit6,.~.-disp)
round(summary(fit7)$coef,3)
fit8<-update(fit7,.~.-hp)
round(summary(fit8)$coef,3)
summary(fit8)
round(0.8336,2)
round(0.8497,2)
sort(round(summary(fit8)$coef,3))
fit7<-dat.frame(update(fit6,.~.-disp))
fit7<-data.frame(update(fit6,.~.-disp))
fit7<-data.frame(update(fit6,.~.-disp), stringAsFactor=FALSE)
xdf<- data.frame(fit7<-data.frame(update(fit6,.~.-disp), stringAsFactor=FALSE))
xdf <-data.frame(summary(fit7$coef))
xdf <-summary(fit7$coef)
typeof(xdf)
as.list(xdf)
as.dataframe(as.list(xdf))
as.data.frame(as.list(xdf))
xdf <-summary(fit7$coef)$coef
xdf <-summary(fit7)$coef
typeof(xdf)
tdf<-data.frame(xdf)
View(tdf)
library(dplyr)
arrange(tdf, "Pr...t...")
names(tdf)
arrange(tdf, "Pr...t..")
arrange(tdf, Pr...t..)
arrange(tdf[2-5,], Pr...t..)
arrange(tdf[2-5,], desc(Pr...t..))
arrange(tdf[2-nrows(tdf),], desc(Pr...t..))
nrows(tdf)
nrow(tdf)
arrange(tdf[2-nrow(tdf),], desc(Pr...t..))
arrange(tdf[2-nrow(tdf),], Pr...t..)
st <- rbind(tdf[1,],arrange(tdf[2-nrow(tdf),], Pr...t..)
)
View(st)
View(tdf)
tdf<-cbind(names=row.names(tdf),tdf)
View(tdf)
x4 <- data.frame(summary(fit7)$coef)
x4
row.names(x4)
column.names(x4)
names(x4)
x4 <-summary(fit7)$coef
View(x4)
x4$row.names
x4 <- data.frame(summary(fit7)$coef)
x4<-cbind(row.names(x4),x4)
View(x4)
arrange(x4,Pr..t..)
arrange(x4,Pr...t..)
arrange(x4[2-nrow(x4)],Pr..t..)
arrange(x4[2-nrow(x4)],Pr...t..)
x4[nrow(x4,)]
x4[nrow(x4),]
x5 <-arrange(x4[2-nrow(x4)],Pr...t..)
x5[nrow(x5),]
fit1 <- lm(mpg~.,data=m)
arrange(fit1)
x1 <- data.frame(summary(fit1)$coef)
x1<-cbind(row.names(x1),x1)
x1 <- data.frame(summary(fit1)$coef)
x1<-cbind(Names=row.names(x1),x1)
x2<-arrange(x1[2-nrow(x1)],Pr...t..)
x2[nrow(x2),]
typeof(x2)
library(dplyr)
fit1 <- lm(mpg~., data=m)
x<- data.frame(round(summary(fit1)$coef,3))
x<-data.frame(cbind(Names=row.names(x),x))
x2<-arrange(x[2-nrow(x)],"Pr...t..")
x2[nrow(x2),]
x[nrow(x)]
x[nrow(x)],
x[nrow(x),],
x[nrow(x),]
x2<-arrange(x[2-nrow(x)],"Pr...t..")
nrow(x)
x[2-1]
x[2-11]
x[2-11,]
x[,2-11]
x
x[2-11]
x[2-11,]
x[,1]
x[,2-11]
x[,2:11]
x[,2]
x[2:11,]
x2 <- arrange(x[2:11,],Pr...t..)
x2
fit1 <- lm(mpg~., data=m)
summary(fit1)$coef
x<- summary(fit1)$coef
x<- as.data.frame(summary(fit1)$coef)
x
names(x)
x<- as.data.frame(Names=row.names,summary(fit1)$coef)
names(x)
x<- as.data.frame(Names=row.names(.),summary(fit1)$coef)
names(x)
x<- as.data.frame(summary(fit1)$coef)
x<- as.data.frame(summary(fit1)$coef, row.names="Names")
names(x)
x<- as.data.frame(summary(fit1)$coef)
typeof(c)
typeof(x)
x2[nrow(x2),]
x2[nrow(x2),1]
x2[nrow(x2),,1]
x2[nrow(x2)]
x2[nrow(x2),]
x2[nrow(x2),]$Names
v <-x2[nrow(x2),]$Names
v <-x2[nrow(x2),]$[1]
v <-x2[nrow(x2),1]
v <-x2[nrow(x2),1]
v<-NULL
v <-x2[nrow(x2),1]
v
v <-x2
v
v[10,1]
typeof(x2)
as.character(v[10,1])
v <-as.character(x2[nrow(x2),1])
fit2<-update(fit1.~.-cyl)
fit2<-update(fit1,.~.-cyl)
summary(fit2)$coef
summary(fit3)$coef
diff(summary(fit4)$coef,summary(fit3$coef)
)
diff(summary(fit4)$coef,summary(fit3)$coef)
summary(fit4)$coef
summary(fit5)$coef
summary(fit6)$coef
summary(fit7)$coef
summary(fit8)$coef
x <-0.5*wt[1]
x <-0.5*m$wt[1,]
x <-0.5*m$wt[,1]
m$wt
x <-0.5*m$wt[1]
x <-0.5*m$wt
2.620*1000
0.5*2.620*1000
0.5*2
swirl()
library(swirl)
ls
library(swirl)
ls()
rm(list=ls())
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit<-lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head
head(trees2)
fit2<- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
length(names(m))
length(names(mtcars))
data(mtcars)
lm(mpg~ I(wt * 0.5) + factor(cyl), data=mtcars)
lm(mpg~ wt + factor(cyl), data=mtcars)
n<-500;x<-seq(0,4*pi,length=n);y<-sin(x)+rnorm(n,sd=.3)
knots<-seq(0,8*pi,length=20);
splineTerms<-sapply(knots,function(knot)(x>knot)*(x-knot))
xMat<-cbind(1,x,splineTerms)
xMat<-cbind(1,x,splineTerms)
xMat<-cbind(1,x,splineTerms)
View(xMat)
yhat<-predict(lm(y~xMat-1))
plot(x,y,frame=FALSE,pch=21,bg="lightblue",cex=2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knot <- 0
plot(x,y, frame=FALSE, pch=21, bg="lightblue", cex=2)
plot(x,y, frame=FALSE, pch=21, bg="lightblue")
lm(y~x)
lm(x~y)
lm(y~x)
lm(y~x + knot)
q6 <- lm(y~x)
plot(q6)
plot(x,y, frame=FALSE, pch=21, bg="lightblue", xlab=c(-5,5))
plot(x,y, frame=FALSE, pch=21, bg="lightblue", xlim=c(-5,5))
log(10)
glm(x )
x <- c(0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0)
tm <- c(4, 6, 2, 1, 4, 2, 5, 1, 3, 4, 5)
t <- log(tm)
q5 <- glm(y ~ x + offset(t), family=poisson)
q5 <- glm(y ~ as.factor(x) + offset(t), family=poisson)
warning()
warnings()
q5 <- glm(y ~ as.factor(x) + offset(t), family=poisson)
warnings()
y<- c(2, 4, 2, 6, 8, 2, 4, 6, 2, 4, 2)
q5 <- glm(y ~ as.factor(x) + offset(t), family=poisson)
exp(q5$coef)
t2 <- log(10) + t
q52 <- glm(y ~ as.factor(x) + offset(t2), family=poisson)
exp(q52$coef)
library(ElemStatLearm)
install.packages("ElemStatLearn")
library(caret)
library(ElemStatLearm)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train=sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2, replace=F)
trainSA=SAheart[train,]
testSA=SAheart[-train,]
set.seed(13234)
fit <- train(chd~age+alcohol+obesity+tobacco+typea+ldl, data=testSA, method="glm", family="binomial")
fit <- train(as.factor(chd)~age+alcohol+obesity+tobacco+typea+ldl, data=testSA, method="glm", family="binomial")
set.seed(13234)
fit <- train(as.factor(chd)~age+alcohol+obesity+tobacco+typea+ldl, data=testSA, method="glm", family="binomial")
fit <- train(as.factor(chd)~age+alcohol+obesity+tobacco+typea+ldl, data=trainSA, method="glm", family="binomial")
rm(fit)
fit <- train(as.factor(chd)~age+alcohol+obesity+tobacco+typea+ldl, data=trainSA, method="glm", family="binomial")
trnpred<-predict(fit, trainSA)
tstpred<-predict(fit, testSA)
missClass=function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
trnans <- missClass(trainSA$chd,trnpred)
trnans <- missClass(trainSA$chd,as.integer(trnpred)
)
tstans <- missClass(testSA$chd,as.integer(tstpred))
modelFit <- glm(chd~age+alcohol+obesity+tobacco+typea+ldl,family = binomial,data = trainSA)
trnpred<-predict(fit, trainSA)
trnpred<-predict(modelFit, trainSA$chd)
trnpred<-predict(modelFit, trainSA)
tstpred<-predict(modelFit, testSA)
tstans <- missClass(testSA$chd,as.integer(tstpred))
round(tstans,2)
trnans <- missClass(trainSA$chd,as.integer(trnpred))
round(trnans,2)
tstans <- missClass(trainSA$chd,as.integer(tstpred))
round(tstans,2)
tstans <- missClass(testSA$chd,as.integer(trnpred))
trnans <- missClass(trainSA$chd,as.integer(trnpred))
round(trnans)
round(trnans,2)
round(tstans,2)
tstans <- missClass(testSA$chd,as.integer(tstpred))
round(tstans,2)
trnans <- missClass(trainSA$chd,as.integer(trnpred))
round(trnans,2)
data(SAheart)
set.seed(8484)
train=sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA=SAheart[train,]
testSA=SAheart[-train,]
set.seed(13234)
modelFit <- glm(chd~age+alcohol+obesity+tobacco+typea+ldl,family = binomial,data = trainSA)
summary(trainSA$chd)
as.factor(trainSA$chd)
names(trainSA[-10])
trnans<-predict(modelFit, trainSA[-10])
tstans<-predict(modelFit, testSA[-10])
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
trainSA$chd
as.factor(trnans)
tstans<-predict(modelFit, testSA)
trnans<-predict(modelFit, trainSA)
missClass(trainSA$chd,trnans)
TRN<- missClass(trainSA$chd,trnans)
round(TRN,2)
TST<- missClass(testSA$chd,tstans)
round(TST,2)
data(vowel.train)
data(vowel.test)
names(vowel.test)
vowel.train$y <- as.factor(vowel.train$y)
vowel.test$y <- as.factor(vowel.test$y)
set.seed(33833)
q5trnfit<- train(y~.,data=vowel.train, method="rf")
varImp(q5trnfit)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
inTrain <- segmentationOriginal[segmentationOriginal$Case == "Train"]
inTrain <- segmentationOriginal[segmentationOriginal$Case == "Train",]
SA_Train<-segmentationOriginal[inTrain]
SA_Train<-segmentationOriginal[inTrain,]
inTrain <- segmentationOriginal[,segmentationOriginal$Case == "Train"]
SA_Train<-segmentationOriginal[inTrain,]
typeof(inTrain)
tain <- segmentationOriginal[,segmentationOriginal$Case == "Train"]
tain <- segmentationOriginal[,segmentationOriginal$Case == "Train",]
train <- segmentationOriginal[segmentationOriginal$Case == "Train",]
trainSO <- segmentationOriginal[segmentationOriginal$Case == "Train",]
rm(train)
set.seed(125)
modelFit <-train(Class~.,data=trainSO, method="rpart")
print(modelFit$finalModel)
x <-read.delim("nccos_chem_data_RI_ALL.txt", stringsAsFactors=FALSE)
setwd("~/Documents/Class Stuff /Developing Data Products/Data/Project")
setwd("~/Documents/Class Stuff /Developing Data Products/Data/Project")
x <-read.delim("nccos_chem_data_RI_ALL.txt", stringsAsFactors=FALSE)
y <-read.delim("nccos_chem_data_MA_ALL.txt", stringsAsFactors=FALSE)
rm(list=ls())
x <-read.delim("nccos_chem_data_RI_ALL.txt", stringsAsFactors=FALSE)
y <-read.delim("nccos_chem_data_MA_ALL.txt", stringsAsFactors=FALSE)
x<- x[!is.na(x$Method) , ]
y<- y[!is.na(y$Method) , ]
y <-read.delim("nccos_chem_data_MA_ALL.txt", stringsAsFactors=FALSE)
y<- y[!is.na(y$Method) , ]
xy <- rbind(x,y)
8451+39304
saveRDS(xy, file='nccos_chem_data_RIMA.rds')
getwd()
shiny::runApp()
getwd()
x<-readRDS("nccos_chem_data_RIMA.rds")
x <-read.delim("nccos_chem_data_RI_ALL.txt", stringsAsFactors=FALSE)
x$Loc <- paste(x$Lat_DD, x$Lon_DD, sep=":")
y$Loc <- paste(y$Lat_DD, y$Lon_DD, sep=":")
xy <- rbind(x,y)
x<- x[!is.na(x$Method) , ]
xy <- rbind(x,y)
saveRDS(xy, file='nccos_chem_data_RIMA.rds')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny)
library(rsconnect)
library(shiny)
runApp()
library(rsconnect)
install.packages("rsconnect")
library(devtools)
devtools::install_github('rstudio/rsconnect')
library(rsconnect)
deployApp()
shiny::runApp()
deployApp()
setwd("~/Documents/Class Stuff /Developing Data Products/Data/Project")
deployApp()
deployApp()
deployApp()
getwd()
deployApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
deployApp()
deployApp()
shiny::runApp('Final')
shiny::runApp('Final')
setwd("~/Documents/Class Stuff /Developing Data Products/Data/Project/Final")
shiny::runApp()
deployApp()
getwd()
deployApp()
library(slidify)
setwd("~/Documents/Class Stuff /Developing Data Products/Data/Project/Final")
author('pitch')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
library(shiny)
shinyUI(
mainPanel(
plotOutput('lineplot'), htmlOutput('mapplot')),
sidebarPanel(
selectInput('parameter_id', "Please select a chemical parameter", input_ID, selected="Mercury"),
selectInput('yr_id', 'Please Select a Year', yrs, selected=2011),
submitButton("Submit")
),
br(),
#             fluidRow(column(12, textOutput('search_msg'))),
#             fluidRow(column(12,tableOutput('table_id')))
)
input_ID <- readRDS("chem_list_rima.rds")
yrs <- readRDS("yrs_rima.rds")
shinyUI(
mainPanel(
plotOutput('lineplot'), htmlOutput('mapplot')),
sidebarPanel(
selectInput('parameter_id', "Please select a chemical parameter", input_ID, selected="Mercury"),
selectInput('yr_id', 'Please Select a Year', yrs, selected=2011),
submitButton("Submit")
),
br(),
#             fluidRow(column(12, textOutput('search_msg'))),
#             fluidRow(column(12,tableOutput('table_id')))
)
getwd()
slidifyUI
library(slidify)
slidifyUI
ggplot(data=x[x$Parameter=="Mercury" & x$Fiscal.Year==2011yr_id,c(3,4,5,8,9,10,13,14,15,17)] , aes(x=Specific.Location, y=Value)) +
geom_bar(stat="identity", width=.5, fill="blue") +
xlab("Specific Location - ") +
ylab(parm_unit())+ggtitle(plot_title())+
theme(plot.title = element_text(lineheight=.8, face="bold"), axis.text.x  = element_text(angle=90, vjust=0.5, size=16))
x<-readRDS("nccos_chem_data_rima.rds")
ggplot(data=x, aes(x=Specific.Location, y=Value)) +
geom_bar(stat="identity", width=.5, fill="blue") +
xlab("Specific Location - ") +
ylab(parm_unit)+ggtitle(plot_title)+
theme(plot.title = element_text(lineheight=.8, face="bold"), axis.text.x  = element_text(angle=90, vjust=0.5, size=16))
parm_unit <- "shit"
ggplot(data=x, aes(x=Specific.Location, y=Value)) +
geom_bar(stat="identity", width=.5, fill="blue") +
xlab("Specific Location - ") +
ylab(parm_unit)+ggtitle(plot_title)+
theme(plot.title = element_text(lineheight=.8, face="bold"), axis.text.x  = element_text(angle=90, vjust=0.5, size=16))
plot_title <- "crap"
ggplot(data=x, aes(x=Specific.Location, y=Value)) +
geom_bar(stat="identity", width=.5, fill="blue") +
xlab("Specific Location - ") +
ylab(parm_unit)+ggtitle(plot_title)+
theme(plot.title = element_text(lineheight=.8, face="bold"), axis.text.x  = element_text(angle=90, vjust=0.5, size=16))
x<- x[x$Parameter==input$parameter_id & x$Fiscal.Year==input$yr_id,c(3,4,5,8,9,10,13,14,15,17)]
input$yr<- "2011"
yr_id <- "2011"
parameter_id <-"Mercury"
x<- x[x$Parameter==parameter_id & x$Fiscal.Year==yr_id,c(3,4,5,8,9,10,13,14,15,17)]
ggplot(data=x, aes(x=Specific.Location, y=Value)) +
geom_bar(stat="identity", width=.5, fill="blue") +
xlab("Specific Location - ") +
ylab(parm_unit)+ggtitle(plot_title)+
theme(plot.title = element_text(lineheight=.8, face="bold"), axis.text.x  = element_text(angle=90, vjust=0.5, size=16))
